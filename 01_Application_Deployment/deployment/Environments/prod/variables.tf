## Common Variables ##
variable "subscription_id" {
  description = "Your subscription ID (GUID)"
  type = string
  default = "f7c5fdda-08da-4dcb-b8c5-56198420fd7f"
}

variable "tenant_id" {
  description = "Your tenant ID (GUID)"
  type = string
  default = "72f988bf-86f1-41af-91ab-2d7cd011db47"
}


variable "location" {
  description = "The region code your script is targeting for deployment eastus,westus, etc"
  type = string
  default = "eastus"
}

variable "failover_location" {
  description = "The secondary azure region for failover"
  type = string
  default = "westus"
}

variable "azure_env_key" {
  description = "Variables which will hold value selected from environment.keys as a flag used in names"
  type = string
  default = ""
}

variable "azure_region_key" {
  description = "Variables which will hold value selected from location.keys as a flag used in names"
  type    = string
  default = ""
}

variable "service_group_name" {
  description = "Name for the grouped services as a solution, contains alphanumerics, letters, dashes, or underscores."
  type    = string
  default = ""
}

variable "service_group_id" {
  description = "Number representing an ordinal used for unique naming"
  type    = number
  default = 1
}

variable "service_name" {
  description = "Variable used for specific service name used in tags and resource naming"
  type    = string
  default = ""
}

variable "resource_group_id" {
  description = "Number representing an ordinal used for unique naming the resource groups"
  type    = number
  default = 1
}


## Common Tag Variables
variable "nike_costcenter" {
  description = "Seven digit costcenter code used for billing in azure to your team"
  type    = string
  default = "0000000"
}

variable "nike_owner" {
  description = "Email address  of the specific account owner, typically Director, Sr. Director, or VP"
  type    = string
  default = "eric.redmond@nike.com"
}

variable "nike_owning_group" {
  description = "Email address distribution list representing group owning / running this subscription"
  type    = string
  default = ""
}

variable "nike_data_classification" {
  description = "String selected from Highly Confidential, Restricted Use, or Public that represents the high classification of data stored within this resource group"
  type    = string
  default = "Highly Confidential"
}

variable "nike_env" {
  description = "String used in tags to indicate status of this environment from Prod, Non-Prod, or Sandbox"
  type    = string
  default = "Non-Prod"
}

variable "nike_application" {
  description = "String used in tags to represent the application name this resource is part of"
  type    = string
  default = "CryptoKicks"
}

variable "nike_department" {
  description = "String used in tags of the owning / operating department"
  type    = string
  default = "Global Innovation"
}

variable "nike_domain" {
  description = "String used in tags of the owning group's tech domain"
  type    = string
  default = "EAP"
}

variable "nike_projectcode" {
  description = "String used in tags to indicate project code"
  type    = string
  default = "20200101-nck"
}

variable "resource_group_name" {
  description = "Variable that will be dynamically set to the resultant resource group name generated by TF"
  type    = string
  default = ""
}

# Refer to: https://confluence.nike.com/display/WPCLD/Azure+Tagging+Standards
# Provides a set of common tags to applied to resources and resource groups
variable "common_tags" { 
    type = map(string)
    default = { 
        CostCenter: ""
        Owner: ""
        OwningGroup: ""
        DataClass: ""
        nike-environment: ""
        nike-application: ""
        nike-department: ""
        nike-domain: ""
        nike-costcenter: ""
        exceptions : "{ \"uptimeschedule\": false,\"deallocated\": true, \"rightsizing\": false, \"blobpublicaccess\" : true, \"keyexpirationdate\" : true}"
  } 
}
# Used in conjunction (see sample below) to extend common_tags to provide additional values
variable "resource_group_tags" { 
    type = map(string)
    default = { 
        ProjectCode:  "",
        Expiration: "",
        SuppressOverwrite : false
  } 
}

# For VNETs 
variable "vnet_id" {
  description = "An ordinal set to indicate virtual net # if you have more than one tied to your project and used to generate unique names"
  type= number
  default = 1
}

variable "vnet_block" {
  description = "Overarching IP block for this VNET. If to be routed to/from NIKE over private link, request from IPAM team. If not, start with 172.31.0.0/16 space and subnet down as needed"
  type= string
  default = "172.31.0.0"   # See Azure IP block request guide
}

variable "vnet_mask" {
  description = "Standard bit mask for the IP block for the virtual network"
  type= number
  default = 20
}

variable "virtual_network_name" {
  description = "Variable that will be dynamically set to the virtual network name generated by TF"
  type    = string
  default = ""
}
variable "virtual_network_id" {
  description = "Variable that will be dynamically set to the virtual network ID generated by TF"
  type= number
  default = 1
}
## For SubNets

variable "subnet_block" {
  description = "The block of IPs within the virtual network block to be assigned to this subnet "
  type    = string
  default = "172.31.0.0"  # See Azure IP block request guide
}

variable "subnet_mask" {
  description = "Standard bit mask for the IP block for the subnet"
  type    = number
  default = 24
}

## For security groups

variable "subnet_id" { 
    description = "Variable that will be dynamically set to the subnet ID generated by TF"
    type = string
    default = ""
}

variable "ssh_source_address" {
  description = "Subnet block from which IPs must originate to allow SSH, if using Direct connect, use 10.0.0.0/8.  If using 172.31.0.0/16, setup bastion service and set this to that same ip block"
  type    = string
  default = "10.0.0.0/8"
}

## For Public IP and Virtual Instance

variable "os_type" {
  description = "OS Type flag set from os_types"
  type    = string
  default = ""
}

variable "server_type" {
  description = "Server Type flag set from server_types"
  type    = string
  default = ""
}

variable "subnet_type" {
  description = "Subnet Type flag set from subnet_types"
  type    = string
  default = ""
}

variable "virtual_machine_ordinal" {
  description = "Variable set to indicate unique number for this host"
  type    = number
  default = 1
}

variable "admin_username" {
  description = "Will be assigned administrator privileges on target host"
  type    = string
  default = "administrator"
}

variable "public_key_file" {
  description = "The file name of the generated public key used to SSH into a host"
  type    = string
  default = ""
}

variable "public_ip_address_id" {
  description = "Variable set to indicate unique number for this public IP"
  type    = number
  default = 1
}

## For cosmosdb
variable "cosmosdb_ordinal" {
  description = "Variable set to indicate unique number for this COSMOSDB"
  type= number
  default = 1
}

## For Kubernetes Cluster

variable "dns_prefix" {
  description = "Variable set to indicate unique prefix to append to DNS entries for this K8S cluster.  Lowercase alphanumerics only"
  type = string
  default = "nikek8s001"
}

variable "container_node_count" {
  description = "Number of container nodes to run at start"
  type= number
  default = 2
}

variable "container_service_ordinal" {
  description = "Variable set to indicate unique number for this container service"
  type= number
  default = 1
}

variable "service_principle_id" {
  description = "Enter the ID for the generated AD service principle account generated for you by the Azure team"
  type = string
  default = "4c447725-84f6-4747-9eb7-70b0cb0aa49b"  ## Replace, this is an invalid placeholder
}

variable "service_principle_secret" {
  description = "Enter the secret for the AD service principle account generated for you by the Azure team"
  type = string
  default = "S2t1tQZLkq-=G=1KoXKYl2twSBd@2gHJ"
}

variable "container_type" {
  description = "Variable to hold value from container_types indicating of the containers will be running linux, window, or both (hybrids)"
  type = string
  default = ""
}
## For Azure Blockchain Service

variable "abs_sku"{
  description = "Azure block chain SKU"
default="S0"
}

variable "abs_tier"{
  description = "Azure block chain service type"
  default = "Standard"
}

variable consortiumManagementAccountPassword{
  default = "A2!!ladkldaa"
}

variable abs_password{
    default = "A2!!ladkldaa"

}

## For Container Registry

variable "kubernetes_cluster_name" {
  description = "Variable that will be dynamically set to the K8S cluster generated by TF"
  type = string
  default = ""
}

variable "registry_ordinal" {
  description = "Variable set to indicate unique number for this container registry"
  type= number
  default = 1
}

## Storage Account

variable "storage_account_ordinal" {
  description = "Variable set to indicate unique number for this storage account"
  type    = number
  default = 1
}

variable "storage_key" {
  description = "Variable set to value from storage_keys to indicate type, used for naming"
  type    = string
  default = ""
}

variable "storage_type" {
  description = "Variable set to value from storage_types to indicate type, used for creating resource"
  type    = string
  default = ""
}

variable "storage_name" {
  description = "Variable that will be dynamically set to the storage account name generated by TF"
  type    = string
  default = ""
}

## For Key Vault 
variable "key_vault_ordinal" {
  description = "Variable set to indicate unique number for this key vault"
  type= number
  default = 1
}

##########################################
# Common lookups - Do not modify          #
# These are set to align to NIKE namming  #
# Or tagging standards. Use to assign     #
# variables for inclusing in the modules  #

variable "environment_keys" {
  type = map(string)
  default = {
    production = "p"
    non-production = "n"
    sandbox = "s"
  }
}

variable "environment_types" {
  type = map(string)
  default = {
    production = "Prod"
    non-production = "Non-Prod"
    sandbox = "Sandbox"
  }
}

variable "location_keys" {
  type = map(string)
  default = {
    azure-global = "0"
    azure-us = "5"
    azure-europe = "6"
    azure-asia = "7"
    azure-china = ""
  }
}

variable "os_types" {
  type = map(string)
  default = {
    windows = "w"
    linux = "l"
  }
}

# ADC" | "APP" | "CTX" | "INF" | "ORA" | "SQL" | "WEB"
variable "server_types" {
  type = map(string)
  default = {
    domain-constroller = "adc"
    application = "app"
    connection = "ctx"
    infrastructure = "inf"
    oracle = "ora"
    microsoft-sql = "sql"
    webserver = "web"
  }
}
# <SubnetType 0 = Internal, 9 = DMZ>
variable "subnet_types" {
    type = map(string)
    default = {
      internal = "0"
      dmz = "9"
    }
}
# <SecGrouipType 0 = Internal, 9 = DMZ>
variable "security_group_types" {
    type = map(string)
    default = {
      internal = "internal"
      dmz = "dmz"
    }
}

variable "container_types" {
    type = map(string)
    default = {
      windows = "w"
      linux = "l",
      hybrid = "h"
    }
}

variable "storage_types" {
    type = map(string)
    default = {
      standard = "std"
      premium = "prem",
      cold = "cool"
    }
}

variable "storage_tiers" {
    type = map(string)
    default = {
      standard = "Standard"
      premium = "Premium"
    }
}
