$containerregistry = "{acrname}"
$containerpassword = "{password}"
$resourceGroupName = "{resourceGroupName}"
$kuberneteservice = "{kuberneteservice}"

kubectl create namespace contoso-digitalgoods
kubectl apply -f .\01_Application_Deployment\deployApp.yml --namespace contoso-digitalgoods
kubectl apply -f .\01_Application_Deployment\deployTokenService.yml --namespace contoso-digitalgoods

$appApiPublicIp = $null

#wait till public ip has been established
Start-Sleep -s 30

while ($null -eq $appApiPublicIp) {
    Write-Host "Waiting to be get public address for Contoso DigitalGoods App"
    $appApiPublicIp = kubectl get svc -n contoso-digitalgoods -o jsonpath="{.items[?(.metadata.name == 'contosodigitalgoodsapp')].status.loadBalancer.ingress[0].ip}"
    Write-Host $appApiPublicIp
}

#Get Kubernetes Resource information
$kubernetesResourceGroup = az aks show -g $resourceGroupName -n $kuberneteservice

#Get KubernetesNode Resource Information
$kubeNodeResourceGroupName = ($kubernetesResourceGroup | ConvertFrom-Json).nodeResourceGroup

Write-Host "Get public ip network from Azure`r`n"
#Get Public Network
$jmespath = "[?contains(ipAddress, '$appApiPublicIp')].name"

$appApipublicNetwork = az network public-ip list `
                        -g $kubeNodeResourceGroupName `
                        --query $jmespath -o tsv

Write-Host "Assign A record($appApipublicNetwork) to dns fqdn`r`n"
#CreateRandom 8 digit not to duplicate DNS Name
$ipSurfix = (Get-Random -Maximum 10000000).toString().PadLeft(8, "0")

$publicEndpoint = az network public-ip update --dns-name appapi$ipSurfix -n $appApipublicNetwork -g $kubeNodeResourceGroupName --query dnsSettings.fqdn -o tsv

Write-Host "Contoso Application API service address is http://$publicEndpoint"

((Get-Content -path .\01_Application_Deployment\src\Contoso.DigitalGoods.Application.API\appsettings.json -Raw) `
-replace '{contosoappuri}', $publicEndpoint) `
| Set-Content -Path .\01_Application_Deployment\src\Contoso.DigitalGoods.Application.API\appsettings.json

Write-Host "Contoso Application URI has been updated. now it will be deployed again in Kuberentes"

##Build and push images for ABT Service
Set-Location .\01_Application_Deployment\src

docker build -f .\Contoso.DigitalGoods.Application.API\Dockerfile  --rm -t 'contoso/digitalgoods/application' .
docker tag 'contoso/digitalgoods/application' "$containerregistry.azurecr.io/contoso/digitalgoods/application"

docker build -f .\Contoso.DigitalGoods.TokenService.API\Dockerfile  --rm -t 'contoso/digitalgoods/tokenservice' .
docker tag 'contoso/digitalgoods/tokenservice' "$containerregistry.azurecr.io/contoso/digitalgoods/tokenservice"

Set-Location ..\..

Write-Host "Login to ACS `r`n"
docker login "$containerregistry.azurecr.io" -u $containerregistry -p $containerpassword

Write-Host "Push Images to ACS`r`n"
docker push "$containerregistry.azurecr.io/contoso/digitalgoods/application"
docker push "$containerregistry.azurecr.io/contoso/digitalgoods/tokenservice"

kubectl apply -f .\01_Application_Deployment\deployApp.yml --namespace contoso-digitalgoods
kubectl apply -f .\01_Application_Deployment\deployTokenService.yml --namespace contoso-digitalgoods

Write-Host "Whole deployment process has been completed...."