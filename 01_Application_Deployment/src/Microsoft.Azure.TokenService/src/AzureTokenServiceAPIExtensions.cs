// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.TokenService
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for AzureTokenServiceAPI.
    /// </summary>
    public static partial class AzureTokenServiceAPIExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IList<AsyncOperation> OperationsGet(this IAzureTokenServiceAPI operations)
            {
                return operations.OperationsGetAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<AsyncOperation>> OperationsGetAsync(this IAzureTokenServiceAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.OperationsGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='operationId'>
            /// </param>
            public static AsyncOperation OperationGet(this IAzureTokenServiceAPI operations, string operationId)
            {
                return operations.OperationGetAsync(operationId).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='operationId'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AsyncOperation> OperationGetAsync(this IAzureTokenServiceAPI operations, string operationId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.OperationGetWithHttpMessagesAsync(operationId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Deployment
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static AsyncResponse ConstructorNFMBRG(this IAzureTokenServiceAPI operations, ConstructorNFMBRGRequest body)
            {
                return operations.ConstructorNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Deployment
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AsyncResponse> ConstructorNFMBRGAsync(this IAzureTokenServiceAPI operations, ConstructorNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ConstructorNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Query - supportsInterface
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static SupportsInterfaceNFMBRGResponse SupportsInterfaceNFMBRG(this IAzureTokenServiceAPI operations, SupportsInterfaceNFMBRGRequest body)
            {
                return operations.SupportsInterfaceNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Query - supportsInterface
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SupportsInterfaceNFMBRGResponse> SupportsInterfaceNFMBRGAsync(this IAzureTokenServiceAPI operations, SupportsInterfaceNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SupportsInterfaceNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Query - name
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static NameNFMBRGResponse NameNFMBRG(this IAzureTokenServiceAPI operations, NameNFMBRGRequest body)
            {
                return operations.NameNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Query - name
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<NameNFMBRGResponse> NameNFMBRGAsync(this IAzureTokenServiceAPI operations, NameNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.NameNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Query - getApproved
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static GetApprovedNFMBRGResponse GetApprovedNFMBRG(this IAzureTokenServiceAPI operations, GetApprovedNFMBRGRequest body)
            {
                return operations.GetApprovedNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Query - getApproved
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GetApprovedNFMBRGResponse> GetApprovedNFMBRGAsync(this IAzureTokenServiceAPI operations, GetApprovedNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetApprovedNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Control - approve
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static AsyncResponse ApproveNFMBRG(this IAzureTokenServiceAPI operations, ApproveNFMBRGRequest body)
            {
                return operations.ApproveNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Control - approve
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AsyncResponse> ApproveNFMBRGAsync(this IAzureTokenServiceAPI operations, ApproveNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApproveNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Control - transferFrom
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static AsyncResponse TransferFromNFMBRG(this IAzureTokenServiceAPI operations, TransferFromNFMBRGRequest body)
            {
                return operations.TransferFromNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Control - transferFrom
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AsyncResponse> TransferFromNFMBRGAsync(this IAzureTokenServiceAPI operations, TransferFromNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.TransferFromNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Control - safeTransferFrom
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static AsyncResponse SafeTransferFromNFMBRG(this IAzureTokenServiceAPI operations, SafeTransferFromNFMBRGRequest body)
            {
                return operations.SafeTransferFromNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Control - safeTransferFrom
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AsyncResponse> SafeTransferFromNFMBRGAsync(this IAzureTokenServiceAPI operations, SafeTransferFromNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SafeTransferFromNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Control - burn
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static AsyncResponse BurnNFMBRG(this IAzureTokenServiceAPI operations, BurnNFMBRGRequest body)
            {
                return operations.BurnNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Control - burn
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AsyncResponse> BurnNFMBRGAsync(this IAzureTokenServiceAPI operations, BurnNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BurnNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Control - mintWithTokenURI
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static AsyncResponse MintWithTokenURINFMBRG(this IAzureTokenServiceAPI operations, MintWithTokenURINFMBRGRequest body)
            {
                return operations.MintWithTokenURINFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Control - mintWithTokenURI
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AsyncResponse> MintWithTokenURINFMBRGAsync(this IAzureTokenServiceAPI operations, MintWithTokenURINFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.MintWithTokenURINFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Query - ownerOf
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static OwnerOfNFMBRGResponse OwnerOfNFMBRG(this IAzureTokenServiceAPI operations, OwnerOfNFMBRGRequest body)
            {
                return operations.OwnerOfNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Query - ownerOf
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OwnerOfNFMBRGResponse> OwnerOfNFMBRGAsync(this IAzureTokenServiceAPI operations, OwnerOfNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.OwnerOfNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Query - balanceOf
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static BalanceOfNFMBRGResponse BalanceOfNFMBRG(this IAzureTokenServiceAPI operations, BalanceOfNFMBRGRequest body)
            {
                return operations.BalanceOfNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Query - balanceOf
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BalanceOfNFMBRGResponse> BalanceOfNFMBRGAsync(this IAzureTokenServiceAPI operations, BalanceOfNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BalanceOfNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Query - symbol
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static SymbolNFMBRGResponse SymbolNFMBRG(this IAzureTokenServiceAPI operations, SymbolNFMBRGRequest body)
            {
                return operations.SymbolNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Query - symbol
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SymbolNFMBRGResponse> SymbolNFMBRGAsync(this IAzureTokenServiceAPI operations, SymbolNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SymbolNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Control - addMinter
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static AsyncResponse AddMinterNFMBRG(this IAzureTokenServiceAPI operations, AddMinterNFMBRGRequest body)
            {
                return operations.AddMinterNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Control - addMinter
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AsyncResponse> AddMinterNFMBRGAsync(this IAzureTokenServiceAPI operations, AddMinterNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.AddMinterNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Control - renounceMinter
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static AsyncResponse RenounceMinterNFMBRG(this IAzureTokenServiceAPI operations, RenounceMinterNFMBRGRequest body)
            {
                return operations.RenounceMinterNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Control - renounceMinter
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AsyncResponse> RenounceMinterNFMBRGAsync(this IAzureTokenServiceAPI operations, RenounceMinterNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.RenounceMinterNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Control - setApprovalForAll
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static AsyncResponse SetApprovalForAllNFMBRG(this IAzureTokenServiceAPI operations, SetApprovalForAllNFMBRGRequest body)
            {
                return operations.SetApprovalForAllNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Control - setApprovalForAll
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AsyncResponse> SetApprovalForAllNFMBRGAsync(this IAzureTokenServiceAPI operations, SetApprovalForAllNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SetApprovalForAllNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Control - transfer
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static AsyncResponse TransferNFMBRG(this IAzureTokenServiceAPI operations, TransferNFMBRGRequest body)
            {
                return operations.TransferNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Control - transfer
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AsyncResponse> TransferNFMBRGAsync(this IAzureTokenServiceAPI operations, TransferNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.TransferNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Query - isMinter
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static IsMinterNFMBRGResponse IsMinterNFMBRG(this IAzureTokenServiceAPI operations, IsMinterNFMBRGRequest body)
            {
                return operations.IsMinterNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Query - isMinter
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IsMinterNFMBRGResponse> IsMinterNFMBRGAsync(this IAzureTokenServiceAPI operations, IsMinterNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.IsMinterNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Query - tokenURI
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static TokenURINFMBRGResponse TokenURINFMBRG(this IAzureTokenServiceAPI operations, TokenURINFMBRGRequest body)
            {
                return operations.TokenURINFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Query - tokenURI
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TokenURINFMBRGResponse> TokenURINFMBRGAsync(this IAzureTokenServiceAPI operations, TokenURINFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.TokenURINFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Token Query - isApprovedForAll
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static IsApprovedForAllNFMBRGResponse IsApprovedForAllNFMBRG(this IAzureTokenServiceAPI operations, IsApprovedForAllNFMBRGRequest body)
            {
                return operations.IsApprovedForAllNFMBRGAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Token Query - isApprovedForAll
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IsApprovedForAllNFMBRGResponse> IsApprovedForAllNFMBRGAsync(this IAzureTokenServiceAPI operations, IsApprovedForAllNFMBRGRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.IsApprovedForAllNFMBRGWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
