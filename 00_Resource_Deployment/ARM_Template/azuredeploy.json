{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "databaseAccounts_contosogood_name": {
        "defaultValue": "contosogood",
        "type": "String"
      },
      "storageAccounts_contosogoodstorage_name": {
        "defaultValue": "contosogoodstorage",
        "type": "String"
      },
      "databaseAccounts_contosogood_app_name": {
        "defaultValue": "contosogood-app",
        "type": "String"
      },
      "blockchainMembers_membercontoso01_name": {
        "defaultValue": "membercontoso01",
        "type": "String"
      },
      "registries_contosodigitalgood_name": {
        "defaultValue": "contosodigitalgood",
        "type": "String"
      }
    },
    "variables": {},
    "resources": [
      {
        "type": "Microsoft.Blockchain/blockchainMembers",
        "apiVersion": "2018-06-01-preview",
        "name": "[parameters('blockchainMembers_membercontoso01_name')]",
        "location": "westus2",
        "sku": {
          "name": "S0",
          "tier": "Standard"
        },
        "kind": "Quorum",
        "properties": {
          "protocol": "Quorum",
          "consensus": "Default",
          "password": "Tm190986@124f",
          "validatorNodesSku": {
            "capacity": 2
          },
          "consortium": "[parameters('blockchainMembers_membercontoso01_name')]",
          "consortiumManagementAccountPassword": "Tm190986@124f",
  
          "firewallRules": [
            {
              "ruleName": "AllowAll",
              "startIpAddress": "0.0.0.0",
              "endIpAddress": "255.255.255.255"
            }
          ]
  
        }
      },
      {
        "type": "Microsoft.ContainerRegistry/registries",
        "apiVersion": "2019-12-01-preview",
        "name": "[parameters('registries_contosodigitalgood_name')]",
        "location": "westus2",
        "sku": {
          "name": "Standard",
          "tier": "Standard"
        },
        "properties": {
          "adminUserEnabled": true,
          "policies": {
            "quarantinePolicy": {
              "status": "disabled"
            },
            "trustPolicy": {
              "type": "Notary",
              "status": "disabled"
            },
            "retentionPolicy": {
              "days": 7,
              "status": "disabled"
            }
          },
          "encryption": {
            "status": "disabled"
          },
          "dataEndpointEnabled": false
        }
      },
  
      {
        "type": "Microsoft.DocumentDB/databaseAccounts",
        "apiVersion": "2020-03-01",
        "name": "[parameters('databaseAccounts_contosogood_name')]",
        "location": "West US 2",
        "tags": {
          "defaultExperience": "Azure Cosmos DB for MongoDB API",
          "hidden-cosmos-mmspecial": "",
          "CosmosAccountType": "Non-Production"
        },
        "kind": "MongoDB",
        "properties": {
          "publicNetworkAccess": "Enabled",
          "enableAutomaticFailover": false,
          "enableMultipleWriteLocations": false,
          "isVirtualNetworkFilterEnabled": false,
          "virtualNetworkRules": [],
          "disableKeyBasedMetadataWriteAccess": false,
          "databaseAccountOfferType": "Standard",
          "consistencyPolicy": {
            "defaultConsistencyLevel": "Session",
            "maxIntervalInSeconds": 5,
            "maxStalenessPrefix": 100
          },
          "locations": [
            {
              "locationName": "West US 2",
              "provisioningState": "Succeeded",
              "failoverPriority": 0,
              "isZoneRedundant": false
            }
          ],
          "capabilities": [
            {
              "name": "EnableMongo"
            }
          ]
        }
      },
      {
        "type": "Microsoft.DocumentDB/databaseAccounts",
        "apiVersion": "2020-03-01",
        "name": "[parameters('databaseAccounts_contosogood_app_name')]",
        "location": "West US 2",
        "tags": {
          "defaultExperience": "Azure Cosmos DB for MongoDB API",
          "hidden-cosmos-mmspecial": "",
          "CosmosAccountType": "Non-Production"
        },
        "kind": "MongoDB",
        "properties": {
          "publicNetworkAccess": "Enabled",
          "enableAutomaticFailover": false,
          "enableMultipleWriteLocations": false,
          "isVirtualNetworkFilterEnabled": false,
          "virtualNetworkRules": [],
          "disableKeyBasedMetadataWriteAccess": false,
          "databaseAccountOfferType": "Standard",
          "consistencyPolicy": {
            "defaultConsistencyLevel": "Session",
            "maxIntervalInSeconds": 5,
            "maxStalenessPrefix": 100
          },
          "locations": [
            {
              "locationName": "West US 2",
              "provisioningState": "Succeeded",
              "failoverPriority": 0,
              "isZoneRedundant": false
            }
          ],
          "capabilities": [
            {
              "name": "EnableMongo"
            }
          ]
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[parameters('storageAccounts_contosogoodstorage_name')]",
        "location": "southcentralus",
        "sku": {
          "name": "Standard_RAGRS",
          "tier": "Standard"
        },
        "kind": "StorageV2",
        "properties": {
          "networkAcls": {
            "bypass": "AzureServices",
            "virtualNetworkRules": [],
            "ipRules": [],
            "defaultAction": "Allow"
          },
          "supportsHttpsTrafficOnly": true,
          "encryption": {
            "services": {
              "file": {
                "keyType": "Account",
                "enabled": true
              },
              "blob": {
                "keyType": "Account",
                "enabled": true
              }
            },
            "keySource": "Microsoft.Storage"
          },
          "accessTier": "Hot"
        }
      },    
      {
        "type": "Microsoft.Storage/storageAccounts/blobServices",
        "apiVersion": "2019-06-01",
        "name": "[concat(parameters('storageAccounts_contosogoodstorage_name'), '/default')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_contosogoodstorage_name'))]"
        ],
        "sku": {
          "name": "Standard_RAGRS",
          "tier": "Standard"
        },
        "properties": {
          "cors": {
            "corsRules": []
          },
          "deleteRetentionPolicy": {
            "enabled": false
          }
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts/fileServices",
        "apiVersion": "2019-06-01",
        "name": "[concat(parameters('storageAccounts_contosogoodstorage_name'), '/default')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_contosogoodstorage_name'))]"
        ],
        "sku": {
          "name": "Standard_RAGRS",
          "tier": "Standard"
        },
        "properties": {
          "cors": {
            "corsRules": []
          }
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
        "apiVersion": "2019-06-01",
        "name": "[concat(parameters('storageAccounts_contosogoodstorage_name'), '/default/giftkey')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_contosogoodstorage_name'), 'default')]",
          "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_contosogoodstorage_name'))]"
        ],
        "properties": {
          "publicAccess": "None"
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
        "apiVersion": "2019-06-01",
        "name": "[concat(parameters('storageAccounts_contosogoodstorage_name'), '/default/scripts')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_contosogoodstorage_name'), 'default')]",
          "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_contosogoodstorage_name'))]"
        ],
        "properties": {
          "publicAccess": "Container"
        }
      }
     
    ]
  }